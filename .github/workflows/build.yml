name: Build APK

on:
  push:
    branches:
      - main  # or your default branch name
    paths-ignore:
      - '**.md'  # Ignore markdown files

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: BookBard/node_modules
        key: ${{ runner.OS }}-node-${{ hashFiles('BookBard/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'  # or your preferred Node.js version

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cd BookBard
        npm install

    - name: Lint check
      run: npx eslint . --ext .js,.jsx

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.OS }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.OS }}-gradle-

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Build APK
      run: |
        pwd;
        ls;
        cd BookBard/android
        ./gradlew assembleRelease

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app-release.apk
        path: BookBard/android/app/build/outputs/apk/release/app-release.apk
        retention-days: 3
